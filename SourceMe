#!/bin/bash

export MICROSERVICE_PROJECT_HOME="$( cd "$( dirname $0 )" && pwd )"
NODEJS_BIN="${MICROSERVICE_PROJECT_HOME}/node_modules/.bin"
PROJECT_BIN="${MICROSERVICE_PROJECT_HOME}/bin"

nvm install  # installs the correct version of NodeJS to run this microservice
npm install  # installs the dependencies for this microservice

test -d logs || mkdir logs
#test -d data || mkdir data

export PATHBAK=$PATH;
export PATH="${PROJECT_BIN}:${NODEJS_BIN}:${PATH}"

#
# --- PM2 Utilities -----------------------------------------------------------
#
function pcycle {
    procId=${1:-0}
    pm2 stop $procId
    if [[ $? -eq 0 ]]; then
        pm2 flush --silent
        pm2 start $procId
        if [[ ! -z "$2" ]]; then
            pm2 logs $procId --lines $2
        else
            pm2 logs $procId
        fi
    fi
}

function plogs {
  procId=${1:-0}
  if [[ ! -z "$2" ]]; then
    pm2 logs $procId --lines $2
  else
    pm2 logs $procId
  fi
}

function pkill {
    procId=${1:-0}
    pm2 stop --silent $procId && pm2 flush && pm2 delete --silent $procId
}

function pnuke {
    pkill all
}

#
# --- Docker Utilities --------------------------------------------------------
#

alias dps='docker ps'
alias dlog='docker logs'
alias dls='docker images'
alias drmi='docker rmi'
alias dnuke='docker system prune -a'

alias dcup='docker-compose up -d'
alias dcdown='docker-compose down'
alias dcnuke='docker-compose down --rmi all --remove-orphans'

function dkill {
    docker stop $1 && docker rm $1
}


#
# --- Overall process management functions ------------------------------------
#
function devnuke {
    # stop the PM2 processes that depend on dev-mongo and then kill dev-mongo
    pnuke

    # remove the directories that were created by SourceMe
    rm -rf node_modules && rm -rf logs && rm -rf data

    # restore sanity to environment variables
    if [[ ! -z $PATHBAK ]]; then
        PATH=$PATHBAK && unset PATHBAK
    fi
}

# using this network name is a real hack! gross!!!
alias dmongo='docker run -it --rm --network nodejsdockertemplate_default --link dev-mongo:mongo mongo mongo dev-mongo/template_microservice -u janie -p'


#
# Exit Messages
#
cyan=`tput setaf 6`
blue=`tput setaf 4`
standout=`tput smso`
nostandout=`tput rmso`
bold=`tput bold`
echo "${cyan}#"
echo "# ${standout}REMEMBER${nostandout} to create the dev-mongo image (with ${blue}./bin/init-mongodb.sh${cyan}), and then "
echo "#          start the container if necessary, with '${blue}dcup dev-mongo${cyan}' ${bold}    :)"
tput sgr0
echo "${cyan}#"
tput sgr0
